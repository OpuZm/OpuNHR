@using OPUPMS.Domain.Restaurant.Model.Dtos;
@{
    Layout = Url.Content(Plugin.Instance.GetLayoutPath("Shared/_LayoutDetail.cshtml"));
    BoxCreateDTO Box = ViewBag.Box ?? new BoxCreateDTO();
    var ListRestaurant = ViewBag.Restaurants;
    var ListAreas = ViewBag.Areas;
}

<div class="container">
    <form class="form-horizontal" id="SubmitForm">
        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">餐厅:</label>
            <div class="col-xs-10">
                <select id="Restaurant" name="Restaurant" class="form-control">
                    <option value="0">请选择</option>
                    @{
                        if (ListRestaurant != null)
                        {
                            foreach (var item in ListRestaurant)
                            {
                                <option value="@item.Id" @(Box.Restaurant == item.Id ? "selected='selected'" : "")>@item.Name</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">餐厅区域:</label>
            <div class="col-xs-10">
                <select id="RestaurantArea" name="RestaurantArea" class="form-control" v-model="areaId">
                    <option value="0">请选择</option>
                    <option v-for="(area,index) in areaRes" srate="area.ServerRate" v-bind:value="area.Id">{{area.Name}}</option>
                    <span>Selected: {{ areaId }}</span>
                </select>
            </div>
        </div>
        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">名称:</label>
            <div class="col-xs-10">
                <input type="text" class="form-control" id="Name" name="Name" placeholder="请输入名称" value="@Box.Name">
            </div>
        </div>
        <div class="form-group">
            <label for="Description" class="col-xs-2 control-label">描述:</label>
            <div class="col-xs-10">
                <textarea id="Description" name="Description" class="form-control" rows="10">@Box.Description</textarea>
            </div>
        </div>
        <div class="form-group text-center">
            <button class="btn btn-primary" type="submit">提交</button>
            <button class="btn btn-default closeAll" type="button">取消</button>
        </div>
        <input type="hidden" name="Id" value="@Box.Id" />
        @Html.AntiForgeryToken()
    </form>
</div>
@section FooterScripts{
@ScriptsEx.Render(Plugin.Instance.Name, "VueJs")
<script>
    $(function () {
        var pageJs = editJs.Create();
        pageJs.init();
    })

    var editJs = {
        Create: function () {
            var editor = {};
            var layindex;

            var bindAction = function () {
                var height = $(document).height() - 250;

                var vmArea = new Vue({
                    el: '#RestaurantArea',
                    data: {
                        area: [],
                        areaRes: [],
                        areaId: '@Box.RestaurantArea'
                    },
                    methods: {
                        AreaChange: function (event) {
                        }
                    }
                })

                function PushArea(data) {
                    $(data).each(function (i, o) {
                        vmArea.area.push(o);
                        if ('@Box.Restaurant' == o.RestaurantId) {
                            vmArea.areaRes.push(o);
                        }
                    })
                }

                function GetAreas() {
                    $.ajax({
                        type: "get",
                        url: "/Res/Api/GetAreas",
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function (xhr) {
                            layindex = layer.open({
                                type: 3,
                                shadeClose: false, //点击遮罩关闭层
                            });
                        },
                        success: function (data, textStatus) {
                            if (data.Data != null) {
                                PushArea(data.Data);
                            }
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            layer.close(layindex);
                        }
                    })
                }

                $("#SubmitForm").validate({
                    rules: {
                        Name: {
                            required: true
                        },
                        Restaurant: {
                            min: 1
                        },
                        RestaurantArea: {
                            min: 1
                        }
                    },
                    messages: {
                        Restaurant: {
                            min: "请选择餐厅"
                        },
                        RestaurantArea: {
                            min: "请选择区域 "
                        }
                    },
                    errorPlacement: function (error, element) {
                        error.appendTo(element.parent());
                    },
                    submitHandler: function (label) {
                        Submit();
                    }
                });

                function Submit() {
                    var para = $("#SubmitForm").serialize();
                    $.ajax({
                        type: "post",
                        url: "/Res/Box/Edit",
                        dataType: "json",
                        data: para,
                        beforeSend: function (XMLHttpRequest) {
                            layindex = layer.open({
                                type: 3,
                                shadeClose: false,
                            });
                        },
                        success: function (data, textStatus) {
                            if (data["Data"] == true) {
                                layer.confirm("提交完成", {
                                    btn: ['继续操作', '退出'] //按钮
                                }, function () {
                                    location.reload();
                                }, function () {
                                    parent.layer.closeAll();
                                });
                                parent.Refresh();
                            } else {
                                layer.alert(data["Message"]);
                            }
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            layer.close(layindex);
                        }
                    });
                }

                $(".closeAll").click(function () {
                    parent.layer.closeAll();
                });

                $("#Restaurant").on("change", function () {
                    var value = $(this).val();
                    vmArea.areaRes = [];
                    $(vmArea.area).each(function (i, o) {
                        if (o.RestaurantId == value) {
                            vmArea.areaRes.push(o);
                        }
                    });

                    //var value = $(this).val();
                    //var RestaurantArea = $("#RestaurantArea");
                    //if (value > 0) {
                    //    $(RestaurantArea).find("option").hide();
                    //    $(RestaurantArea).find("option[pid=" + value + "]").show();
                    //    $(RestaurantArea).find("option:first").prop("selected", "selected");
                    //} else {
                    //    $(RestaurantArea).find("option:first").prop("selected", "selected");
                    //    $(RestaurantArea).find("option:not(first)").hide();
                    //}
                });

                GetAreas();
            };

            editor.init = function () {
                bindAction();
            }

            return editor;
        }
    }
</script>
}


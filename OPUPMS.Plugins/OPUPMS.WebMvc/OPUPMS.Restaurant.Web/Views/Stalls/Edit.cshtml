@using OPUPMS.Domain.Restaurant.Model.Dtos;
@{
    Layout = Url.Content(Plugin.Instance.GetLayoutPath("Shared/_LayoutDetail.cshtml"));
    StallsCreateDTO Stalls = ViewBag.Stalls ?? new StallsCreateDTO();
    List<PrinterDTO> PrinterList = ViewBag.PrinterList;
}

<div class="container">
    <form class="form-horizontal" id="SubmitForm">
        <div class="form-group">
            <label for="Name" class="col-xs-2 control-label">名称:</label>
            <div class="col-xs-10">
                <input type="text" class="form-control" id="Name" name="Name" placeholder="请输入名称" value="@Stalls.Name">
            </div>
        </div>
        <div class="form-group">
            <label for="" class="col-xs-2 control-label">打印机:</label>
            <div class="col-xs-10">
                <select id="PrinterId" name="PrinterId" class="form-control">
                    <option value="0">请指定打印机</option>
                    @{
                        if (PrinterList != null)
                        {
                            foreach (var item in PrinterList)
                            {
                                <option value="@item.Id" @(item.Id == Stalls.Print_Id ? "selected='selected'" : "")>@item.Name</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label for="Description" class="col-xs-2 control-label">描述:</label>
            <div class="col-xs-10">
                <textarea id="Description" class="form-control" rows="10">@Stalls.Description</textarea>
            </div>
        </div>
        <div class="form-group text-center">
            <button class="btn btn-primary" type="submit">提交</button>
            <button class="btn btn-default closeAll" type="button">取消</button>
        </div>
    </form>
</div>
@section FooterScripts{
<script>
    $(function () {
        var pageJs = editJs.Create();
        pageJs.init();
    })

    var editJs = {
        Create: function () {
            var editor = {};
            var layindex;

            var bindAction = function () {
                $("#SubmitForm").validate({
                    rules: {
                        Name: {
                            required: true
                        }
                    },
                    errorPlacement: function (error, element) {
                        error.appendTo(element.parent());
                    },
                    submitHandler: function (label) {
                        Submit();
                    }
                })

                function Submit() {
                    var token = $('@Html.AntiForgeryToken()').val();
                    var headers = {};
                    headers["__RequestVerificationToken"] = token;
                    var para = { Id: '@Stalls.Id', Name: $("#Name").val(), Description: $("#Description").val(), Print_Id: $("#PrinterId").val() };
                    $.ajax({
                        type: "post",
                        url: "/Res/Stalls/Edit",
                        dataType: "json",
                        headers: headers,
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(para),
                        async: false,
                        beforeSend: function (XMLHttpRequest) {
                            layindex = layer.open({
                                type: 3,
                                shadeClose: false,
                            });
                        },
                        success: function (data, textStatus) {
                            if (data["Data"] == true) {
                                layer.confirm("提交完成", {
                                    btn: ['继续操作', '取消'] //按钮
                                }, function () {
                                    location.reload();
                                }, function () {
                                    parent.layer.closeAll();
                                });
                                parent.Refresh();
                            } else {
                                layer.alert(data["Message"]);
                            }
                        },
                        complete: function (XMLHttpRequest, textStatus) {
                            layer.close(layindex);
                        }
                    });
                }

                $(".closeAll").click(function () {
                    parent.layer.closeAll();
                })
            }

            editor.init = function () {
                bindAction();
            }

            return editor;
        }
    }
</script>
}


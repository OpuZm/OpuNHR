@using OPUPMS.Domain.Restaurant.Model.Dtos;
@{
    Layout = Url.Content(Plugin.Instance.GetLayoutPath("Shared/_LayoutDetail.cshtml"));
    ViewBag.Title = "选择餐饮项目";
    string OrderTableIds = ViewBag.OrderTableIds;
    string TablesName = ViewBag.TablesName;
    List<CategoryListDTO> Categorys = ViewBag.Categorys as List<CategoryListDTO>;

}
@section Styles{
    <style>
        .list-group-item {
            /*max-height: 50px;*/
            padding: 5px;
        }

        .li-margin-5 {
            margin: 5px 10px 5px 10px;
            cursor: pointer;
        }

        .list-group li {
            text-overflow: ellipsis;
            word-break: break-all;
            overflow: hidden;
        }
    </style>
}
<div class="container-fluid">
    <form class="form-horizontal" id="SubmitForm">
        <div id="ProjectList">
            <div class="form-group">
                <div class="col-xs-8 bg-info">
                    <ul class="nav nav-pills" role="tablist">
                        <li role="presentation" class="">
                            <a href="javascript:void(0);" v-on:click="ClickCategory(0,0)">全部</a>
                        </li>
                        <li v-for="(cat,index) in GetCategoryFilter(0)" role="presentation" class="dropdown">
                            <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                                {{cat.Name}}
                                <span class="caret"></span>
                            </a>
                            <ul class="dropdown-menu">
                                <li>
                                    <a href="javascript:void(0);" v-on:click="ClickCategory(0,cat.Id)">全部</a>
                                </li>
                                <li v-for="(catChild,index) in GetCategoryFilter(cat.Id)">
                                    <a href="javascript:void(0);" v-on:click="ClickCategory(catChild.Id,cat.Id)">{{catChild.Name}}</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a href="javascript:void(0);" v-on:click="ClickCategory(-1,0)">套餐</a>
                        </li>
                    </ul>
                    <div class="row">
                        <ul class="list-group" style="margin:0 0 0 0;">
                            <li v-for="(pro,index) in CategoryChange(category,parentCategory)" v-bind:class="pro.Class" v-on:click="Add(pro,index)">
                                {{pro.Name}} <span class="pull-right glyphicon glyphicon-ok" v-show="pro.Checked"></span>
                            </li>
                        </ul>
                    </div>
                    <div class="row">
                        <ul class="list-group" style="margin:0 0 0 0;">
                            <li v-for="(detail,index) in GetDetails()" class="list-group-item col-xs-2 li-margin-5">{{detail.Unit}} - {{detail.Price}}</li>
                        </ul>
                    </div>
                </div>
                <div class="col-xs-4">
                    <div class="form-group form-inline" style="margin-bottom:0px;">
                        <label for=""><h4>@TablesName</h4></label>
                    </div>
                    <div class="form-group text-primary" style="margin-bottom:0px;">
                        <ul class="list-group" style="margin-bottom:0px;">
                            <li class="list-group-item" v-for="(sel,index) in selects">
                                <span v-on:click="ShowExtend(sel.R_Project_Id,index)" style="cursor:pointer;" v-if="sel.Id<=0">{{sel.ProjectName}} <span v-if="sel.CyddMxType==1">({{sel.Unit}})</span></span>
                                <span v-else>{{sel.ProjectName}} </span>

                                <span v-if="sel.Id>0">*{{sel.Num}}</span>
                                <input v-else type="number" v-model="sel.Num" class="form-control text-left" style="width:80px; display:inline-block" v-on:change="GetTotal()" min="0" step="0.5" onkeypress="return (/[\d]/.test(String.fromCharCode(event.keyCode)))" />
                                <span v-if="sel.Id>0" class="small glyphicon glyphicon-time">
                                    {{sel.StrTime}}
                                    <span v-if="sel.Extend!=null">特殊:<span class="glyphicon glyphicon-yen btn-sm text-danger">{{sel.ExtendTotal}}</span></span>
                                </span>
                                <span v-if="sel.ExtendCount==true">特殊:<span class="glyphicon glyphicon-yen btn-sm text-danger">{{sel.ExtendTotal}}</span></span>
                            </li>
                        </ul>
                    </div>
                    <div class="form-group text-danger" style="margin-bottom:0px;">
                        <h4>已选:{{selects.length}} 总价:{{totalPrice}}</h4>
                    </div>
                    <div class="form-group text-center">
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                操作 <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">
                                <li v-on:click="Control"><a href="#" control="0">保存</a></li>
                                <li v-on:click="Control"><a href="#" control="2">落单打厨</a></li>
                                <li v-on:click="Control"><a href="#" control="1">落单不打厨</a></li>
                                <li v-on:click="Control"><a href="#" _href="ChangeTable" control="3">菜品转台</a></li>
                                <li v-on:click="Control"><a href="#" _href="UpProject" control="4">起菜</a></li>
                                <li v-on:click="Control"><a href="#" _href="CallProject" control="5">催菜</a></li>
                                <li v-on:click="Control"><a href="#" control="6">打厨单</a></li>
                            </ul>
                        </div>
                        <button class="btn btn-default closeAll" type="button">取消</button>
                    </div>
                </div>
            </div>

            <div id="ChangeTable" style="display:none;">
                <div class="col-xs-12">
                    <ul class="list-group" style="margin:0 0 0 0;">
                        <li v-for="(pro,index) in choseSelects" v-on:click="SelAddSelect(pro,index)" v-bind:class="pro.Class">
                            {{pro.ProjectName}}
                            <span class="glyphicon glyphicon-yen btn-sm text-danger">{{pro.Price}}</span>
                            <span class="pull-right glyphicon glyphicon-ok" v-show="pro.Checked"></span>
                            <div class="text-center">
                                <input type="number" v-bind:max="pro.OrderNum" v-model="pro.Num" class="form-control text-center" style="width:80px;" min="0.5" step="0.5" onkeypress="return (/[\d]/.test(String.fromCharCode(event.keyCode)))" />
                            </div>
                        </li>
                    </ul>
                </div>
                @*<p class="text-center">
                        <button class="btn btn-primary" id="ChangeProjectTableSubmit" type="button" v-on:click="ChangeProjectTableSubmit">提交</button>
                        <button class="btn btn-default closeLayer" type="button">取消</button>
                    </p>*@
            </div>
            <div id="UpProject" style="display:none;">

            </div>
            <div id="CallProject" style="display:none;">

            </div>
            <div id="ProjectExtend" class="container" style="display:none;">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active">
                        <a href="#basic" aria-controls="basic" role="tab" data-toggle="tab">餐饮规格</a>
                    </li>
                    <li role="presentation">
                        <a href="#extend" aria-controls="extend" role="tab" data-toggle="tab">特殊要求</a>
                    </li>
                    <li role="presentation">
                        <a href="#changePrice" aria-controls="changePrice" role="tab" data-toggle="tab">临时改价</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="basic">
                        <div class="form-group">
                            <ul class="list-group" style="margin:0 0 0 0;">
                                <li v-for="(detail,index) in GetSelProjectDetails" v-on:click="AddDetail(detail,index)" v-bind:class="detail.Class">{{detail.Unit}} - {{detail.Price}}<span v-show="detail.Checked" class="pull-right glyphicon glyphicon-ok"></span></li>
                            </ul>
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane" id="extend">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:20%">类型</th>
                                    <th>选项</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>做法:</td>
                                    <td>
                                        <ul class="list-group" style="margin:0 0 0 0;">
                                            <li v-for="(extend,index) in projectExtend" v-on:click="AddExtend(extend,index)" v-bind:class="extend.Class">{{extend.ProjectExtendName}}<span v-if="extend.Unit!=null">/{{extend.Unit}}</span> <span class="glyphicon glyphicon-yen btn-sm text-danger">{{extend.Price}}</span><span class="pull-right glyphicon glyphicon-ok" v-show="extend.Checked"></span></li>
                                        </ul>
                                    </td>
                                </tr>
                                <tr>
                                    <td>要求:</td>
                                    <td>
                                        <ul class="list-group" style="margin:0 0 0 0;">
                                            <li v-for="(extend,index) in GetExtends(2)" v-on:click="AddExtend(extend,index)" v-bind:class="extend.Class">{{extend.ProjectExtendName}}<span v-if="extend.Unit!=null">/{{extend.Unit}}</span> <span class="glyphicon glyphicon-yen btn-sm text-danger">{{extend.Price}}</span><span class="pull-right glyphicon glyphicon-ok" v-show="extend.Checked"></span></li>
                                        </ul>
                                    </td>
                                </tr>
                                <tr>
                                    <td>配菜:</td>
                                    <td>
                                        <ul class="list-group" style="margin:0 0 0 0;">
                                            <li v-for="(extend,index) in GetExtends(3)" v-on:click="AddExtend(extend,index)" v-bind:class="extend.Class">{{extend.ProjectExtendName}}<span v-if="extend.Unit!=null">/{{extend.Unit}}</span> <span class="glyphicon glyphicon-yen btn-sm text-danger">{{extend.Price}}</span><span class="pull-right glyphicon glyphicon-ok" v-show="extend.Checked"></span></li>
                                        </ul>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                    <div role="tabpanel" class="tab-pane" id="changePrice">
                        <div class="form-group">
                            <label for="Name" class="col-xs-2 control-label">原价:</label>
                            <div class="col-xs-10">
                                <input type="text" class="form-control" id="OriPrice" name="OriPrice" value="">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="Name" class="col-xs-2 control-label">改后价:</label>
                            <div class="col-xs-10">
                                <input type="text" class="form-control" id="ModifyPrice" name="ModifyPrice" value="">
                            </div>
                        </div>
                    </div>
                    <div class="form-group text-center">
                        <button class="btn btn-primary clientCloseAll" type="button">关闭</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@section FooterScripts{
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <script src="~/signalr/hubs"></script>
    @ScriptsEx.Render(Plugin.Instance.Name, "VueJs")
    <script>
        $(function () {
            var pageJs = editJs.Create();
            pageJs.init();
        })

        var editJs = {
            Create: function () {
                var editor = {};
                var layindex;
                //var chat = $.connection.systemHub;
                //chat.hubName = 'systemHub';
                //chat.connection.start();

                var bindAction = function () {
                    var width = $(window).width();
                    var height = $(window).height();
                    var token = $('@Html.AntiForgeryToken()').val();
                    var headers = {};
                    headers["__RequestVerificationToken"] = token;

                    var vm = new Vue({
                        el: '#ProjectList',
                        data: {
                            pros: [],
                            selects: [],
                            totalPrice: 0,
                            category: 0,
                            parentCategory:0,
                            projectExtend: [],
                            extendIndex: 0,
                            isExtend: false,
                            choseSelects: [],
                            categorys: [],
                            clickProject: 0,
                            selectProject: {},
                            tables: []
                        },
                        computed: {
                            GetChangeTable: function () {
                            },
                            GetSelProjectDetails: function () {
                                return this.selectProject.ProjectDetailList;
                            }
                        },
                        methods: {
                            GetExtends: function (type) {
                                if (type > 0) {
                                    return this.projectExtend.filter(function (obj) {
                                        return obj.ExtendType === type;
                                    })
                                }
                            },
                            GetDetails: function () {
                                return this.clickProject.ProjectDetailList;
                            },
                            GetCategoryFilter: function (pid) {
                                return this.categorys.filter(function (obj) {
                                    return obj.Pid == pid;
                                })
                            },
                            ChangeProjectTableSubmit: function () {
                                var req = this.choseSelects.filter(function (obj) {
                                    return obj.Checked === true;
                                })
                                //换桌提交,暂时写死餐饮台号
                                var para = { req: req, orderTableId:12};
                                $.ajax({
                                    type: "post",
                                    url: "/Res/Home/ChangeProjectTable",
                                    data: JSON.stringify(para),
                                    headers: headers,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    async: false,
                                    beforeSend: function (xhr) {
                                        layindex = layer.open({
                                            type: 3,
                                            shadeClose: true, //点击遮罩关闭层
                                        });
                                    },
                                    success: function (data, textStatus) {
                                        if (data.Data == true) {
                                            $.connection.hub.start().done(function () {
                                                chat.server.notifyResServiceRefersh(true);
                                            })
                                            layer.alert("提交成功", function () {
                                                location.reload()
                                            })
                                        }
                                        else {
                                            layer.alert(data.Message);
                                        }
                                    },
                                    complete: function (XMLHttpRequest, textStatus) {
                                        layer.close(layindex);
                                    }
                                })
                            },
                            ClickCategory: function (category,parentCategory) {
                                this.category = category;
                                this.parentCategory = parentCategory;
                            },
                            //根据所选类别切换显示餐饮项目(类别,父类别)
                            CategoryChange: function (category, parentCategory) {
                                var res = [];
                                if (category != -1) {
                                    if (parentCategory > 0) {
                                        if (category > 0) {
                                            res = this.pros.filter(function (obj) {
                                                return obj.Category === category;
                                            })
                                        }
                                        else {
                                            var cats = this.categorys.filter(function (obj) {
                                                return obj.Pid === parentCategory;
                                            })
                                            if (cats.length > 0) {
                                                $(cats).each(function (i, o) {
                                                    $(vm.pros).each(function (j, k) {
                                                        if (o.Id == k.Category && k.CyddMxType == 1) {
                                                            res.push(k);
                                                        }
                                                    })
                                                })
                                            }
                                        }
                                    }
                                    else {
                                        return this.pros;
                                    }
                                } else {
                                    $(this.pros).each(function (i, o) {
                                        if (o.CyddMxType == 2) {
                                            res.push(o);
                                        }
                                    })
                                }
                                return res;
                            },
                            ChoseProjectTableSubmit: function () {
                                var req = this.choseSelects.filter(function (obj) {
                                    return obj.Checked === true;
                                });
                                var orderTables = this.tables.filter(function (obj) {
                                    return obj.Checked === true;
                                });
                                if (req.length <= 0) {
                                    layer.alert("请选择菜品！");
                                    return;
                                }
                                if (orderTables <= 0) {
                                    layer.alert("请选择台号！");
                                    return;
                                }
                                var para = { req: req, tables: orderTables };
                                $.ajax({
                                    type: "post",
                                    url: "/Res/Home/ChoseProjectTable",
                                    data: JSON.stringify(para),
                                    headers: headers,
                                    contentType: "application/json; charset=utf-8",
                                    dataType: "json",
                                    async: false,
                                    beforeSend: function (xhr) {
                                        layindex = layer.open({
                                            type: 3,
                                            shadeClose: true, //点击遮罩关闭层
                                        });
                                    },
                                    success: function (data, textStatus) {
                                        if (data.Data == true) {
                                            $.connection.hub.start().done(function () {
                                                chat.server.notifyResServiceRefersh(true);
                                            })
                                            layer.alert("提交成功", function () {
                                                location.reload()
                                            })
                                        }
                                        else {
                                            layer.alert(data.Message);
                                        }
                                    },
                                    complete: function (XMLHttpRequest, textStatus) {
                                        layer.close(layindex);
                                    }
                                })
                            },
                            SelAddSelect: function (obj,index) {
                                SelAddSelect(obj,index);
                            },
                            Add: function (pro, index) {
                                AddSelect(pro, index);
                            },
                            GetTotal: function () {
                                GetTotal();
                            },
                            GetSelected: function () {
                                return this.selects.filter(function (obj) {
                                    return obj.Id > 0;
                                })
                            },
                            ShowExtend: function (cyxm, index) {
                                this.extendIndex = index;
                                ShowExtend(cyxm, index);
                            },
                            AddDetail: function (cyxm,index) {
                                AddDetail(cyxm,index);
                            },
                            AddExtend:function(pro,index){
                                AddExtend(pro, index);
                            },
                            SubmitExtend:function(){
                                SubmitExtend();
                            },
                            HasExtend:function(type,obj){
                                HasExtend(type,obj);
                            },
                            ExtendTotal:function(type,obj){
                                ExtendTotal(type,obj);
                            },
                            Control: function (event) {
                                var obj=$(event.target)
                                var control = $(obj).attr("control");
                                var href = "#" + $(obj).attr("_href");
                                switch (control) {
                                        case "0":
                                            OrderPrint(0);
                                            break;
                                        case "1":
                                            OrderPrint(1);
                                            break;
                                        case "2":
                                            OrderPrint(2);
                                            break;
                                        case "3":
                                            Operate("菜品转台", href);
                                            break;
                                        case "4":
                                            break;
                                        case "5":
                                            break;
                                        case "6":
                                            break;
                                        case "7":
                                            Operate("多桌点餐", href);
                                            break;
                                        default:
                                            break;
                                }
                            }
                        }
                    })

                    function AddDetail(pro, index) {
                        var old = vm.selectProject;
                        $(old.ProjectDetailList).each(function (i, o) {
                            o.Checked = false;
                        })
                        pro.Checked = true;
                        pro.ProjectName = old.ProjectName;
                        pro.Num = old.Num;
                        pro.R_Project_Id = old.R_Project_Id;
                        pro.CyddMxId = pro.Id;
                        pro.Id = 0;
                        pro.CyddMxName = old.ProjectName + "(" + pro.Unit + ")";
                        pro.CyddMxType = old.CyddMxType;
                        pro.ProjectDetailList = old.ProjectDetailList;
                        vm.selects[vm.extendIndex] = pro;
                        GetTotal();
                        console.log(vm.selects);
                                                    @*vm.selects.push({ CyddTh: '@OrderTableId', CyddMxType: pro.CyddMxType, CyddMxId: detail.Id, Price: detail.Price, Num: 1, CyddMxStatus: 1, ProjectName: pro.Name, Unit: detail.Unit, Id: 0, R_Project_Id: pro.Id, CyddMxName: pro.ProjectName + detail.Unit, ProjectDetailList: pro.ProjectDetailList });*@
                    }

                    function SelAddSelect(pro, index) {
                        if (pro.Checked == true) {
                            pro.Checked = false;
                            Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5");
                        } else {
                            pro.Checked = true;
                            Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5 active");
                        }
                        //$(vm.selects).each(function (i, o) {
                        //    if (o.CyddMxId == pro.Id && o.Id==0) {
                        //        vm.selects.splice(i, 1);
                        //        bol = false;
                        //        return false;
                        //    }
                        //})
                    }

                    function Operate(title, href)
                    {
                        GetSelects();
                        //GetTables();
                        layindex = layer.open({
                            type: 1,
                            title: title,
                            area: [width + "px", height + "px"],
                            shadeClose: true, //点击遮罩关闭
                            content: $(href)
                        });
                    }

                    function GetSelects() {
                        vm.choseSelects = [];
                        $(vm.selects).each(function (i, o) {
                            if (o.Id > 0) {
                                Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5");
                                o.OrderNum = o.Num;
                                vm.choseSelects.push(o);
                            }
                        })
                    }

                    function HasExtend(type,obj) {
                        var res = false;
                        if (obj.Extend != null) {
                            $(obj.Extend).each(function (i,o) {
                                if (o.ExtendType==type) {
                                    res = true;
                                    return false;
                                }
                            })
                        }
                        return res;
                    }

                    function ExtendTotal(type,obj) {
                        var total = 0;
                        if (obj.Extend != null) {
                            $(obj.Extend).each(function (i, o) {
                                if (type>0) {
                                    if (o.ExtendType == type) {
                                        total += o.Price * obj.Num;
                                    }
                                }
                                else {
                                    total += o.Price * obj.Num;
                                }
                            })
                        }
                        return total;
                    }

                    function SubmitExtend() {
                        var extCount = 0;
                        var projectDetail = vm.selects[vm.extendIndex];
                        var temp = [];
                        projectDetail.Extend = [];
                        projectDetail.ExtendTotal = 0;

                        $(vm.projectExtend).each(function (i,o) {
                            if (o.Checked == true) {
                                //temp.push(o);
                                extCount++;
                                projectDetail.Extend.push(o);
                                projectDetail.ExtendTotal += o.Price * projectDetail.Num;
                            }
                        })
                        //Vue.set(projectDetail, "Extend", temp);
                        if (extCount>0) {
                            projectDetail.ExtendCount = true;
                        }
                        GetTotal();
                        layer.closeAll();
                    }

                    function AddExtend(pro, index) {
                        if (pro.Checked == true) {
                            pro.Checked = false;
                            Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5");
                        } else {
                            pro.Checked = true;
                            Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5 active");
                        }
                        //pro.Checked = true;
                        //Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5 active");
                        //$(vm.projectExtend).each(function (i, o) {
                        //    if (o.Id == pro.Id && o.Checked==false) {
                        //        vm.projectExtend.splice(i, 1);
                        //        return false;
                        //    }
                        //})
                        GetTotal();
                    }

                    function ShowExtend(cyxm, index) {
                        var pro = vm.selects[index];
                        $(pro.ProjectDetailList).each(function (i,o) {
                            Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5");
                        })
                        vm.selectProject = pro;

                        layer.open({
                            type: 1,
                            title: "菜品操作",
                            area: [width + "px", height + "px"],
                            content: $("#ProjectExtend"),
                            maxmin: false
                        })
                    }

                    function PushExtend(data) {
                        vm.projectExtend = [];
                        var temp = vm.selects[vm.extendIndex];
                        $(data).each(function (i, o) {
                            if (temp.Extend != null) {
                                $(temp.Extend).each(function (j,p) {
                                    if (o.Id == p.Id) {
                                        Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5 active");
                                        o.Checked = true;
                                        return false;
                                    } else {
                                        Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5");
                                        o.Checked = false;
                                    }
                                })
                            } else {
                                Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5");
                                o.Checked = false;
                            }
                            vm.projectExtend.push(o);
                        })
                        layer.open({
                            type: 1,
                            title: "菜品操作",
                            area: [width + "px", height + "px"],
                            content: $("#ProjectExtend"),
                            maxmin: false
                        })
                    }

                    function OrderPrint(status) {
                        var orderTables = '@OrderTableIds'.split(',');
                        $(vm.selects).each(function (i, o) {
                            o.ProjectDetailList = [];
                            o.ExtendIds = [];
                            if (o.Extend!=null) {
                                $(o.Extend).each(function (j,p) {
                                    o.ExtendIds.push(p.Id);
                                })
                            }
                        })
                        var para = { req: vm.selects, orderTableIds: orderTables, status: status };
                        console.log(para);
                        $.ajax({
                            type: "post",
                            url: "/Res/Home/OrderDetailCreate",
                            data: JSON.stringify(para),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            async: false,
                            beforeSend: function (xhr) {
                                layindex = layer.open({
                                    type: 3,
                                    shadeClose: true, //点击遮罩关闭层
                                });
                            },
                            success: function (data, textStatus) {
                                if (data.Data == true) {
                                    layer.alert("提交完成", function () {
                                        parent.Refresh();
                                        parent.layer.closeAll();
                                    })
                                } else {
                                    layer.alert(data["Message"]);
                                }
                            },
                            complete: function (XMLHttpRequest, textStatus) {
                                layer.close(layindex);
                            }
                        })
                    }

                    function AddSelect(pro, index) {
                        vm.clickProject = pro;
                        pro.Checked = true;
                        Vue.set(pro, 'Class', "list-group-item col-xs-2 li-margin-5 active");
                        if (pro.CyddMxType == 1) {
                            var detail = pro.ProjectDetailList[0];
                            vm.selects.push({ CyddMxType: pro.CyddMxType, CyddMxId: detail.Id, Price: detail.Price, Num: 1, CyddMxStatus: 1, ProjectName: pro.Name, Unit: detail.Unit, Id: 0, R_Project_Id: pro.Id, CyddMxName: pro.Name + detail.Unit, ProjectDetailList: pro.ProjectDetailList, CostPrice:pro.CostPrice });
                        } else {
                            vm.selects.push({ CyddMxType: pro.CyddMxType, CyddMxId: pro.Id, Price: pro.Price, Num: 1, CyddMxStatus: 1, ProjectName: pro.Name, Unit: "", Id: 0, R_Project_Id: pro.Id, CyddMxName: pro.Name, CostPrice: pro.CostPrice });
                        }
                        console.log(vm.selects);
                        GetTotal();
                    }

                    function GetTotal() {
                        vm.totalPrice = 0;
                        $(vm.selects).each(function (i, o) {
                            if (o.Num<=0) {
                                vm.selects.splice(i,1);
                            }
                            vm.totalPrice += o.Price * o.Num;
                            if (o.Extend != null) {
                                o.ExtendTotal = 0;
                                $(o.Extend).each(function (j,p) {
                                    vm.totalPrice += p.Price * o.Num;

                                    o.ExtendTotal += p.Price * o.Num;
                                })
                            }
                        })
                    }

                    function GetCategorys() {
                        var para = { pid: 0};
                        $.ajax({
                            type: "get",
                            url: "/Res/Api/GetAllCategorys",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            async: false,
                            beforeSend: function (xhr) {
                                layindex = layer.open({
                                    type: 3,
                                    shadeClose: true, //点击遮罩关闭层
                                });
                            },
                            success: function (data, textStatus) {
                                if (data.Data != null) {
                                    $(data.Data).each(function (i, o) {
                                        vm.categorys.push(o);
                                    })
                                    console.log(vm.categorys);
                                } else {
                                    layer.msg('不存在菜品类别', {
                                        time: 2000
                                    });
                                }
                            },
                            complete: function (XMLHttpRequest, textStatus) {
                                layer.close(layindex);
                            }
                        })
                    }

                    function GetProjectDetails(category) {
                        var para = { category: category, hasPackage:true };
                        $.ajax({
                            type: "get",
                            url: "/Res/Project/GetProjectAndDetails",
                            data: para,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            async: false,
                            beforeSend: function (xhr) {
                                layindex = layer.open({
                                    type: 3,
                                    shadeClose: true, //点击遮罩关闭层
                                });
                            },
                            success: function (data, textStatus) {
                                if (data.Data != null) {
                                    PushDown(data.Data);
                                } else {
                                    layer.msg('不存在该类别菜品', {
                                        time: 2000
                                    });
                                }
                            },
                            complete: function (XMLHttpRequest, textStatus) {
                                layer.close(layindex);
                            }
                        })
                    }

                    function PushDown(data) {
                        vm.pros = [];
                        $(data).each(function (i, o) {
                            if (!o.IsDelete) {
                                Vue.set(o, 'Class', "list-group-item col-xs-2 li-margin-5");
                                vm.pros.push(o);
                            }
                        })
                        console.log(vm.pros);
                    }

                    $("#SubmitForm").validate({
                        rules: {
                        },
                        messages: {
                        },
                        errorPlacement: function (error, element) {
                            error.appendTo(element.parent());
                        },
                        submitHandler: function (label) {
                            Submit();
                        }
                    })

                    function Submit() {
                        var res = [];
                        $(vm.tables).each(function (i, o) {
                            if (o.Checked == true) {
                                res.push(o);
                            }
                        })
                        parent.GetChose(res);
                        parent.layer.closeAll();

                    }

                    $(".closeAll").click(function () {
                        parent.layer.closeAll();
                    })

                    $(".clientCloseAll").click(function () {
                        layer.closeAll();
                    })

                    $(".closeLayer").click(function () {
                        layer.close(layindex);
                    })

                    function InitPage() {
                        GetCategorys();
                        GetProjectDetails(0);
                    }

                    InitPage();
                }

                editor.init = function () {
                    bindAction();
                }

                return editor;
            }
        }

    </script>
}


